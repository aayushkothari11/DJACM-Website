{
  "_args": [
    [
      {
        "raw": "@material/textfield@^0.28.0",
        "scope": "@material",
        "escapedName": "@material%2ftextfield",
        "name": "@material/textfield",
        "rawSpec": "^0.28.0",
        "spec": ">=0.28.0 <0.29.0",
        "type": "range"
      },
      "/Users/sahiljajodia/Projects/acm-website/android-dot-com/node_modules/material-components-web"
    ]
  ],
  "_from": "@material/textfield@>=0.28.0 <0.29.0",
  "_id": "@material/textfield@0.28.0",
  "_inCache": true,
  "_location": "/@material/textfield",
  "_nodeVersion": "8.1.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/textfield-0.28.0.tgz_1515437718427_0.21583646722137928"
  },
  "_npmUser": {
    "name": "acdvorak",
    "email": "acdvorak@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@material/textfield@^0.28.0",
    "scope": "@material",
    "escapedName": "@material%2ftextfield",
    "name": "@material/textfield",
    "rawSpec": "^0.28.0",
    "spec": ">=0.28.0 <0.29.0",
    "type": "range"
  },
  "_requiredBy": [
    "/material-components-web"
  ],
  "_resolved": "https://registry.npmjs.org/@material/textfield/-/textfield-0.28.0.tgz",
  "_shasum": "775419a5c8ef7abd8283d5be0a1d16d196808fe0",
  "_shrinkwrap": null,
  "_spec": "@material/textfield@^0.28.0",
  "_where": "/Users/sahiljajodia/Projects/acm-website/android-dot-com/node_modules/material-components-web",
  "bugs": {
    "url": "https://github.com/material-components/material-components-web/issues"
  },
  "dependencies": {
    "@material/animation": "^0.25.0",
    "@material/base": "^0.24.0",
    "@material/ripple": "^0.28.0",
    "@material/rtl": "^0.1.8",
    "@material/theme": "^0.28.0",
    "@material/typography": "^0.28.0"
  },
  "description": "The Material Components for the web text field component",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-CwyUHfWkAHSk2YdDBtnMBPIqgaioqovCwrM9gM6rx45w7JU0rawsiZcxhuoro4PF4B+gukSATvsg0zKzLgOCsg==",
    "shasum": "775419a5c8ef7abd8283d5be0a1d16d196808fe0",
    "tarball": "https://registry.npmjs.org/@material/textfield/-/textfield-0.28.0.tgz"
  },
  "homepage": "https://github.com/material-components/material-components-web#readme",
  "keywords": [
    "material components",
    "material design",
    "textfield",
    "text field"
  ],
  "license": "Apache-2.0",
  "main": "index.js",
  "maintainers": [
    {
      "name": "material-admin",
      "email": "lynnjepsen+npm@google.com"
    },
    {
      "name": "williamernest",
      "email": "williamernest@google.com"
    },
    {
      "name": "moog16",
      "email": "mattgoo@gmail.com"
    },
    {
      "name": "bonniez",
      "email": "bonniez@google.com"
    },
    {
      "name": "patrickrodee",
      "email": "prodee@google.com"
    },
    {
      "name": "aprigogin",
      "email": "andrey.prigogin@gmail.com"
    },
    {
      "name": "kfranqueiro",
      "email": "kenneth.franqueiro@gmail.com"
    },
    {
      "name": "acdvorak",
      "email": "acdvorak@gmail.com"
    },
    {
      "name": "lynnjepsen",
      "email": "lynnjepsen@google.com"
    },
    {
      "name": "bwobrien",
      "email": "obrien.test@gmail.com"
    },
    {
      "name": "amsheehan",
      "email": "alex.m.sheehan@gmail.com"
    }
  ],
  "name": "@material/textfield",
  "optionalDependencies": {},
  "readme": "<!--docs:\ntitle: \"Text Field\"\nlayout: detail\nsection: components\niconId: text_field\npath: /catalog/input-controls/text-field/\n-->\n\n# Text Field\n\n<!--<div class=\"article__asset\">\n  <a class=\"article__asset-link\"\n     href=\"https://material-components-web.appspot.com/text-field.html\">\n    <img src=\"{{ site.rootpath }}/images/mdc_web_screenshots/text-fields.png\" width=\"240\" alt=\"Text fields screenshot\">\n  </a>\n</div>-->\n\nText fields allow users to input, edit, and select text.\n\n## Design & API Documentation\n\n<ul class=\"icon-list\">\n  <li class=\"icon-list-item icon-list-item--spec\">\n    <a href=\"https://material.io/guidelines/components/text-fields.html\">Material Design guidelines: Text Fields</a>\n  </li>\n  <li class=\"icon-list-item icon-list-item--link\">\n    <a href=\"https://material-components-web.appspot.com/text-field.html\">Demo</a>\n  </li>\n</ul>\n\n## Installation\n\n```\nnpm install --save @material/textfield\n```\n\n## Usage\n\n### HTML Structure\n\n```html\n<div class=\"mdc-text-field\">\n  <input type=\"text\" id=\"my-text-field\" class=\"mdc-text-field__input\">\n  <label class=\"mdc-text-field__label\" for=\"my-text-field\">Hint text</label>\n  <div class=\"mdc-text-field__bottom-line\"></div>\n</div>\n```\n\n#### HTML5 Validation\n\n`MDCTextFieldFoundation` provides validity styling by using the `:invalid` and `:required` attributes provided\nby HTML5's form validation API.\n\n```html\n<div class=\"mdc-text-field\">\n  <input type=\"password\" id=\"pw\" class=\"mdc-text-field__input\" required minlength=8>\n  <label for=\"pw\" class=\"mdc-text-field__label\">Password</label>\n  <div class=\"mdc-text-field__bottom-line\"></div>\n</div>\n```\n\n`MDCTextFieldFoundation` automatically appends an asterisk to the label text if the required attribute is set.\n\n#### Pre-filled\n\nWhen dealing with JS-driven text fields that already have values, you'll want to ensure that you\nrender `mdc-text-field__label` with the `mdc-text-field__label--float-above` modifier class, and `mdc-text-field` with the `mdc-text-field--upgraded` modifier class. This will\nensure that the label moves out of the way of the text field's value and prevents a Flash Of\nUn-styled Content (**FOUC**).\n\n```html\n<div class=\"mdc-text-field mdc-text-field--upgraded\">\n  <input type=\"text\" id=\"pre-filled\" class=\"mdc-text-field__input\" value=\"Pre-filled value\">\n  <label class=\"mdc-text-field__label mdc-text-field__label--float-above\" for=\"pre-filled\">\n    Label in correct place\n  </label>\n  <div class=\"mdc-text-field__bottom-line\"></div>\n</div>\n```\n> _NOTE_: Only place an `mdc-text-field__label` inside of `mdc-text-field` _if you plan on using\n> JavaScript_. Otherwise, the label must go outside of `mdc-text-field`, as shown below.\n\n#### CSS Only\n\n```html\n<label for=\"text-field-no-js\">TextField with no JS: </label>\n<div class=\"mdc-text-field\">\n  <input type=\"text\" id=\"text-field-no-js\" class=\"mdc-text-field__input\" placeholder=\"Hint text\">\n</div>\n```\n\n> _NOTE_: Do not use `mdc-text-field__bottom-line`, `mdc-text-field__outline`, or `mdc-text-field__idle-outline` inside of `mdc-text-field` _if you plan on using `mdc-text-field--box` or `mdc-text-field--outlined` without using JavaScript_. Bottom line and outline should not be included as part of the DOM structure of a CSS-only text field.\n\n```html\n<label for=\"css-only-text-field-box\">Your name:</label>\n<div class=\"mdc-text-field mdc-text-field--box\">\n  <input type=\"text\" class=\"mdc-text-field__input\" id=\"css-only-text-field-box\" placeholder=\"Name\">\n</div>\n```\n\n#### Full Width\n\n```html\n<div class=\"mdc-text-field mdc-text-field--fullwidth\">\n  <input class=\"mdc-text-field__input\"\n         type=\"text\"\n         placeholder=\"Full-Width Text Field\"\n         aria-label=\"Full-Width Text Field\">\n</div>\n```\n\n> _NOTE_: Do not use `mdc-text-field__label` within `mdc-text-field--fullwidth`. Labels should not be\nincluded as part of the DOM structure of a full width text field.\n\n#### Textarea\n\n```html\n<div class=\"mdc-text-field mdc-text-field--textarea\">\n  <textarea id=\"textarea\" class=\"mdc-text-field__input\" rows=\"8\" cols=\"40\"></textarea>\n  <label for=\"textarea\" class=\"mdc-text-field__label\">Textarea Label</label>\n</div>\n```\n\n> _NOTE_: Only use `mdc-text-field__label` within `mdc-text-field--textarea` _if you plan on using\n> Javascript_. Otherwise, use the `placeholder` attribute, as shown below.\n\n```html\n<div class=\"mdc-text-field mdc-text-field--textarea\">\n  <textarea id=\"textarea-css-only\"\n    class=\"mdc-text-field__input\"\n    rows=\"8\"\n    cols=\"40\"\n    placeholder=\"Enter something about yourself\"></textarea>\n</div>\n```\n\n#### Disabled\n\nAdd the `disabled` attribute to `<input>` if the `mdc-text-field` is disabled. You also need to add `mdc-text-field--disabled` to the `mdc-text-field`.\n\n```html\n<div class=\"mdc-text-field mdc-text-field--disabled\">\n  <input type=\"text\" id=\"disabled-text-field\" class=\"mdc-text-field__input\" disabled>\n  <label class=\"mdc-text-field__label\" for=\"disabled-text-field\">Disabled text field</label>\n  <div class=\"mdc-text-field__bottom-line\"></div>\n</div>\n```\n\n#### Outlined\n\n```html\n<div class=\"mdc-text-field mdc-text-field--outlined\">\n  <input type=\"text\" id=\"tf-outlined\" class=\"mdc-text-field__input\">\n  <label for=\"tf-outlined\" class=\"mdc-text-field__label\">Your Name</label>\n  <div class=\"mdc-text-field__outline\">\n    <svg>\n      <path class=\"mdc-text-field__outline-path\"/>\n    </svg>\n  </div>\n  <div class=\"mdc-text-field__idle-outline\"></div>\n</div>\n```\n\nSee [here](outline/) for more information on using the outline sub-component.\n\n> _NOTE_: Do not use `mdc-text-field__bottom-line` inside of `mdc-text-field` _if you plan on using `mdc-text-field--outlined`_. Bottom line should not be included as part of the DOM structure of an outlined text field.\n\n#### Helper Text\n\nThe helper text provides supplemental information and/or validation messages to users. It appears on input field focus\nand disappears on input field blur by default, or it can be persistent.\nSee [here](helper-text/) for more information on using helper text.\n\n#### Leading and Trailing Icons\n\nLeading and trailing icons can be added to MDC Text Fields as visual indicators as well as interaction targets.\nSee [here](icon/) for more information on using icons.\n\n### CSS Classes\n\nCSS Class | Description\n--- | ---\n`mdc-text-field` | Mandatory\n`mdc-text-field--upgraded` | Indicates the text field is upgraded, normally by JavaScript\n`mdc-text-field--box` | Styles the text field as a box text field\n`mdc-text-field--outlined` | Styles the text field as an outlined text field\n`mdc-text-field--fullwidth` | Styles the text field as a full width text field\n`mdc-text-field--textarea` | Indicates the text field is a `<textarea>`\n`mdc-text-field--disabled` | Styles the text field as a disabled text field\n`mdc-text-field--dense` | Styles the text field as a dense text field\n`mdc-text-field--with-leading-icon` | Styles the text field as a text field with a leading icon\n`mdc-text-field--with-trailing-icon` | Styles the text field as a text field with a trailing icon\n`mdc-text-field--focused` | Styles the text field as a text field in focus\n\n### Sass Mixins\n\nMixin | Description\n--- | ---\n`mdc-text-field-box-corner-radius($radius)` | Customizes the border radius for a box text field\n`mdc-text-field-textarea-corner-radius($radius)` | Customizes the border radius for a `<textarea>` text field\n\n### `MDCTextField`\n\nSee [Importing the JS component](../../docs/importing-js.md) for more information on how to import JavaScript.\n\nProperty | Value Type | Description\n--- | --- | ---\n`value` | String | Proxies to the foundation's `getValue`/`setValue` methods.\n`disabled` | Boolean | Proxies to the foundation's `isDisabled`/`setDisabled` methods.\n`valid` | Boolean | Proxies to the foundation's `isValid`/`setValid` methods.\n`required` | Boolean | Proxies to the foundation's `isRequired`/`setRequired` methods.\n`helperTextContent` | String | Proxies to the foundation's `setHelperTextContent` method when set\n`ripple` | `MDCRipple` | The `MDCRipple` instance for the root element that `MDCTextField` initializes\n\nMethod Signature | Description\n--- | ---\n`layout() => void` | Adjusts the dimensions and positions for all sub-elements\n\n##### `MDCTextField.ripple`\n\n`MDCRipple` instance. When given an `mdc-text-field--box` root element, this is set to the `MDCRipple` instance on the root element. When given an `mdc-text-field--outlined` root element, this is set to the `MDCRipple` instance on the `mdc-text-field__outline` element. Otherwise, the field is set to `null`.\n\n### `MDCTextFieldAdapter`\n\nMethod Signature | Description\n--- | ---\n`addClass(className: string) => void` | Adds a class to the root element\n`removeClass(className: string) => void` | Removes a class from the root element\n`hasClass(className: string) => boolean` | Returns true if the root element contains the given class name\n`registerTextFieldInteractionHandler(evtType: string, handler: EventListener)` => void | Registers an event handler on the root element for a given event\n`deregisterTextFieldInteractionHandler(evtType: string, handler: EventListener)` => void | Deregisters an event handler on the root element for a given event\n`registerInputInteractionHandler(evtType: string, handler: EventListener)` => void | Registers an event listener on the native input element for a given event\n`deregisterInputInteractionHandler(evtType: string, handler: EventListener)` => void | Deregisters an event listener on the native input element for a given event\n`registerBottomLineEventHandler(evtType: string, handler: EventListener)` => void | Registers an event listener on the bottom line element for a given event\n`deregisterBottomLineEventHandler(evtType: string, handler: EventListener)` => void | Deregisters an event listener on the bottom line element for a given event\n`getNativeInput() => {value: string, disabled: boolean, badInput: boolean, checkValidity: () => boolean}?` | Returns an object representing the native text input element, with a similar API shape\n`getIdleOutlineStyleValue(propertyName: string) => string` | Returns the idle outline element's computed style value of the given css property `propertyName`\n`isFocused() => boolean` | Returns whether the input is focused\n`isRtl() => boolean` | Returns whether the direction of the root element is set to RTL\n\n#### `MDCTextFieldAdapter.getNativeInput()`\n\nReturns an object representing the native text input element, with a similar API shape. The object returned should include the `value`, `disabled` and `badInput` properties, as well as the `checkValidity()` function. We _never_ alter the value within our code, however we _do_ update the disabled property, so if you choose to duck-type the return value for this method in your implementation it's important to keep this in mind. Also note that this method can return null, which the foundation will handle gracefully.\n\n#### `MDCTextFieldAdapter.getIdleOutlineStyleValue(propertyName: string)`\n\nReturns the idle outline element's computed style value of the given css property `propertyName`. The vanilla implementation achieves this via `getComputedStyle(...).getPropertyValue(propertyName)`.\n\n### `MDCTextFieldFoundation`\n\nMethod Signature | Description\n--- | ---\n`getValue() => string` | Returns the input's value.\n`setValue(value: string)` | Sets the input's value.\n`isValid() => boolean` | If a custom validity is set, returns that value. Otherwise, returns the result of native validity checks.\n`setValid(isValid: boolean)` | Sets custom validity. Once set, native validity checking is ignored.\n`isDisabled() => boolean` | Returns whether or not the input is disabled\n`setDisabled(disabled: boolean) => void` | Updates the input's disabled state\n`isRequired() => boolean` | Returns whether the input is required.\n`setRequired(isRequired: boolean)` | Sets whether the input is required.\n`handleTextFieldInteraction(evt: Event) => void` | Handles click and keydown events originating from inside the Text Field component\n`activateFocus() => void` | Activates the focus state of the Text Field. Normally called in response to the input focus event.\n`deactivateFocus() => void` | Deactivates the focus state of the Text Field. Normally called in response to the input blur event.\n`handleBottomLineAnimationEnd(evt: Event) => void` | Handles the end of the bottom line animation, performing actions that must wait for animations to finish. Expects a transition-end event.\n`setHelperTextContent(content: string) => void` | Sets the content of the helper text\n`updateOutline() => void` | Updates the focus outline for outlined text fields\n\n`MDCTextFieldFoundation` supports multiple optional sub-elements: bottom line, helper text, icon, label, and outline. The foundations of these sub-elements must be passed in as constructor arguments to `MDCTextFieldFoundation`.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/material-components/material-components-web.git"
  },
  "version": "0.28.0"
}
