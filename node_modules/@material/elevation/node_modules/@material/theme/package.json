{
  "_args": [
    [
      {
        "raw": "@material/theme@^0.4.0",
        "scope": "@material",
        "escapedName": "@material%2ftheme",
        "name": "@material/theme",
        "rawSpec": "^0.4.0",
        "spec": ">=0.4.0 <0.5.0",
        "type": "range"
      },
      "/Users/sahiljajodia/Projects/acm-website/android-dot-com/node_modules/@material/elevation"
    ]
  ],
  "_from": "@material/theme@>=0.4.0 <0.5.0",
  "_id": "@material/theme@0.4.0",
  "_inCache": true,
  "_location": "/@material/elevation/@material/theme",
  "_nodeVersion": "7.10.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/theme-0.4.0.tgz_1506978717093_0.37165507208555937"
  },
  "_npmUser": {
    "name": "acdvorak",
    "email": "acdvorak@gmail.com"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@material/theme@^0.4.0",
    "scope": "@material",
    "escapedName": "@material%2ftheme",
    "name": "@material/theme",
    "rawSpec": "^0.4.0",
    "spec": ">=0.4.0 <0.5.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@material/elevation"
  ],
  "_resolved": "https://registry.npmjs.org/@material/theme/-/theme-0.4.0.tgz",
  "_shasum": "0aef1a0279b65c15990584fb8b8eca095c734641",
  "_shrinkwrap": null,
  "_spec": "@material/theme@^0.4.0",
  "_where": "/Users/sahiljajodia/Projects/acm-website/android-dot-com/node_modules/@material/elevation",
  "bugs": {
    "url": "https://github.com/material-components/material-components-web/issues"
  },
  "dependencies": {},
  "description": "The Material Components for the web theming system",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "0aef1a0279b65c15990584fb8b8eca095c734641",
    "tarball": "https://registry.npmjs.org/@material/theme/-/theme-0.4.0.tgz"
  },
  "homepage": "https://github.com/material-components/material-components-web#readme",
  "keywords": [
    "material components",
    "material design",
    "theme"
  ],
  "license": "Apache-2.0",
  "maintainers": [
    {
      "name": "material-admin",
      "email": "lynnjepsen+npm@google.com"
    },
    {
      "name": "aprigogin",
      "email": "andrey.prigogin@gmail.com"
    },
    {
      "name": "kfranqueiro",
      "email": "kenneth.franqueiro@gmail.com"
    },
    {
      "name": "acdvorak",
      "email": "acdvorak@gmail.com"
    },
    {
      "name": "lynnjepsen",
      "email": "lynnjepsen@google.com"
    },
    {
      "name": "bwobrien",
      "email": "obrien.test@gmail.com"
    },
    {
      "name": "yeelan0319",
      "email": "yiranmao@gmail.com"
    },
    {
      "name": "amsheehan",
      "email": "alex.m.sheehan@gmail.com"
    },
    {
      "name": "traviskaufman",
      "email": "travis.kaufman@gmail.com"
    }
  ],
  "name": "@material/theme",
  "optionalDependencies": {},
  "readme": "<!--docs:\ntitle: \"Theme\"\nlayout: detail\nsection: components\nexcerpt: \"Color theming for MDC-Web components.\"\niconId: theme\npath: /catalog/theme/\n-->\n\n# Theme\n\n<!--<div class=\"article__asset\">\n  <a class=\"article__asset-link\"\n     href=\"https://material-components-web.appspot.com/theme.html\">\n    <img src=\"{{ site.rootpath }}/images/mdc_web_screenshots/themes.png\" width=\"241\" alt=\"Themes screenshot\">\n  </a>\n</div>-->\n\nThis color palette comprises primary and secondary colors that can be used for illustration or to develop your brand colors.\n\nMDC Theme is a foundational module that themes MDC Web components. The colors in this module are derived from three theme colors:\n\n* Primary: the primary color used in your application, applies to a number of UI elements.\n* Secondary: the secondary color used in your application, applies to a number of UI elements. (Previously called \"accent\".)\n* Background: the background color for your application, aka the color on top of which your UI is drawn.\n\nand five text styles:\n\n* Primary: used for most text\n* Secondary: used for text which is lower in the visual hierarchy\n* Hint: used for text hints, such as those in text fields and labels\n* Disabled: used for text in disabled components and content\n* Icon: used for icons\n\n> **A note about Primary and Secondary**, don't confuse primary/secondary _color_ with primary/secondary _text_. The former refers to the primary/secondary _theme_ color that is used to establish a visual identity and color many parts of your application. The latter refers to the style of text that is most prominent (low opacity, high contrast), and used to display most content.\n\nSome components can change their appearance when in a Dark Theme context, aka placed on top of a dark background. There are two ways to specify if a component is in a Dark Theme context. The first is to add `mdc-theme--dark` to a *container* element, which holds the component. The second way is to add `<component_name>--theme-dark` modifier class to the actual component element. For example, `mdc-button--theme-dark` would put the MDC Button in a Dark Theme context.\n\n> **A note about Dark Theme context**, don't confuse Dark Theme context with a component that has a dark color. Dark Theme context means the component sits on top of a dark background.\n\n## Design & API Documentation\n\n<ul class=\"icon-list\">\n  <li class=\"icon-list-item icon-list-item--spec\">\n    <a href=\"https://material.io/guidelines/style/color.html\">Material Design guidelines: Color</a>\n  </li>\n  <li class=\"icon-list-item icon-list-item--link\">\n    <a href=\"https://material-components-web.appspot.com/theme.html\">Demo</a>\n  </li>\n</ul>\n\n## Installation\n\n```\nnpm install --save @material/theme\n```\n\n## Usage\n\n### Change Theme Colors\n\nMDC Theme makes it easy to develop your brand colors. You override the default theme color through Sass variables or CSS custom properties. CSS custom properties enables runtime theming.\n\n> **A note about Sass variables**, you need to define the three theme color variables before importing mdc-theme or any MDC-Web components that rely on it, like following:\n\n```scss\n$mdc-theme-primary: #9c27b0; // Purple 500\n$mdc-theme-secondary: #ffab40; // Orange A200\n$mdc-theme-background: #fff; // White\n\n@import \"@material/theme/mdc-theme\";\n```\n\n> **A note about `$mdc-theme-secondary`**: This variable was previously named `$mdc-theme-accent`.\n> For backward compatibility, `$mdc-theme-accent` still exists, but it is **deprecated**.\n> Apps that previously customized `$mdc-theme-accent` will continue to work, but new apps should use\n> `$mdc-theme-secondary` instead.\n\nMDC Theme also exposes _light_ and _dark_ variants of the primary and secondary colors. By default, these values are\ncomputed by lightening and darkening the main primary/secondary colors in Sass, but you can override them if desired:\n\n```scss\n$mdc-theme-primary-light: #ce93d8; // Purple 200\n$mdc-theme-primary-dark: #6a1b9a; // Purple 800\n$mdc-theme-secondary-light: #ffd180; // Orange A100\n$mdc-theme-secondary-dark: #ff6d00; // Orange A700\n\n@import \"@material/theme/mdc-theme\";\n```\n\nThe text color, for text placed on top of these selected theme colors, is programmatically computed based on color contrast. We follow the Web Content Accessibility Guidelines 2.0.\n\nhttps://www.w3.org/TR/WCAG20\n\n#### CSS Custom Properties\n\n> **A note about `<TEXT_STYLE>` and `<THEME_COLOR>`**, `<TEXT_STYLE>` represents the lowercase name of the text styles listed above, e.g. `hint`. `<THEME_COLOR>` represents the lowercase name of the theme colors listed above, e.g. `secondary`. When you put it all together it would be `--mdc-theme-text-hint-on-secondary`.\n\nCSS Custom property | Description\n--- | ---\n`--mdc-theme-primary` | The theme primary color\n`--mdc-theme-primary-light` | The theme primary color (light variant)\n`--mdc-theme-primary-dark` | The theme primary color (dark variant)\n`--mdc-theme-secondary` | The theme secondary color\n`--mdc-theme-secondary-light` | The theme secondary color (light variant)\n`--mdc-theme-secondary-dark` | The theme secondary color (dark variant)\n`--mdc-theme-background` | The theme background color\n`--mdc-theme-text-<TEXT_STYLE>-on-<THEME_COLOR>` | Text color for TEXT_STYLE on top of THEME_COLOR background\n`--mdc-theme-text-<TEXT_STYLE>-on-light` | Text color for TEXT_STYLE on top of light background\n`--mdc-theme-text-<TEXT_STYLE>-on-dark` | Text color for TEXT_STYLE on top of dark background\n\n### CSS Classes\n\nMDC-Web provides SASS mixins, such as `mdc-button-filled-accessible`, to facilitate customization of some components. For more information, consult the documentation for each component.\n\nIf you want to modify an element, which is not a Material Design component, you can apply the following modifier CSS classes.\n\n> **A note about `<TEXT_STYLE>` and `<THEME_COLOR>`**, `<TEXT_STYLE>` represents the lowercase name of the text styles listed above, e.g. `hint`. `<THEME_COLOR>` represents the lowercase name of the theme colors listed above, e.g. `secondary`. When you put it all together it would be `mdc-theme--text-hint-on-secondary`.\n\nCSS Class | Description\n--- | ---\n`mdc-theme--primary` | Sets the text color to the theme primary color\n`mdc-theme--primary-light` | Sets the text color to the theme primary color (light variant)\n`mdc-theme--primary-dark` | Sets the text color to the theme primary color (dark variant)\n`mdc-theme--secondary` | Sets the text color to the theme secondary color\n`mdc-theme--secondary-light` | Sets the text color to the theme secondary color (light variant)\n`mdc-theme--secondary-dark` | Sets the text color to the theme secondary color (dark variant)\n`mdc-theme--background` | Sets the background color to the theme background color\n`mdc-theme--primary-bg` | Sets the background color to the theme primary color\n`mdc-theme--primary-light-bg` | Sets the background color to the theme primary color (light variant)\n`mdc-theme--primary-dark-bg` | Sets the background color to the theme primary color (dark variant)\n`mdc-theme--secondary-bg` | Sets the background color to the theme secondary color\n`mdc-theme--secondary-light-bg` | Sets the background color to the theme secondary color (light variant)\n`mdc-theme--secondary-dark-bg` | Sets the background color to the theme secondary color (dark variant)\n`mdc-theme--text-<TEXT_STYLE>-on-<THEME_COLOR>` | Sets text to a suitable color for TEXT_STYLE on top of THEME_COLOR background\n`mdc-theme--text-<TEXT_STYLE>-on-light` | Sets text to a suitable color for TEXT_STYLE on top of light background\n`mdc-theme--text-<TEXT_STYLE>-on-dark` | Sets text to a suitable color for TEXT_STYLE on top of dark background\n\n### Sass Mixins, Variables, and Functions\n\nMixin | Description\n--- | ---\n`mdc-theme-prop($property, $style, $important, $edgeOptOut)` | Applies a theme color or a custom color to a CSS property, optionally with `!important`. If `$edgeOptOut` is `true` and a theme color is passed, the style will be wrapped in a `@supports` clause to exclude the style in Edge to avoid issues with its buggy CSS variable support.\n`mdc-theme-dark($root-selector, $compound)` | Creates a rule that is applied when the current selector is within an Dark Theme context\n\n#### `mdc-theme-dark($root-selector, $compound)`\n\nCreates a rule that is applied when the current selector is within an Dark Theme context. If you are using the mixin on anything other than the base selector of the component, e.g. `.mdc-button`, you need to specify `$root-selector` as the base selector as a parameter. You can also specify `$compound` to true if the the current selector is a compound selector with the base selector, e.g. a modifier class to the component root element.\n\n#### `mdc-theme-prop` Properties\n\nThe properties below can be used as the `$style` argument for the `mdc-theme-prop` mixin. Literal color values (e.g., `rgba(0, 0, 0, .75)`) may also be used instead.\n\n> **A note about `<TEXT_STYLE>` and `<THEME_COLOR>`**, `<TEXT_STYLE>` represents the lowercase name of the text styles listed above, e.g. `hint`. `<THEME_COLOR>` represents the lowercase name of the theme colors listed above, e.g. `secondary`. When you put it all together it would be `text-hint-on-secondary`.\n\nProperty Name | Description\n--- | ---\n`primary` | The theme primary color\n`primary-light` | The theme primary color (light variant)\n`primary-dark` | The theme primary color (dark variant)\n`secondary` | The theme secondary color\n`secondary-light` | The theme secondary color (light variant)\n`secondary-dark` | The theme secondary color (dark variant)\n`background` | The theme background color\n`text-<TEXT_STYLE>-on-<THEME_COLOR>` | TEXT_STYLE on top of THEME_COLOR background\n`text-<TEXT_STYLE>-on-light` | TEXT_STYLE on top of a light background\n`text-<TEXT_STYLE>-on-dark` | TEXT_STYLE on top of a dark background\n\n#### `mdc-theme-luminance`\n\nCalculates the luminance value (0 - 1) of a given color.\n\n```scss\n@debug mdc-theme-luminance(#9c27b0); // 0.11654\n```\n\n#### `mdc-theme-contrast`\n\nCalculates the contrast ratio between two colors.\n\n```scss\n@debug mdc-theme-contrast(#9c27b0, #000); // 3.33071\n```\n\n#### `mdc-theme-light-or-dark`\n\nDetermines whether to use light or dark text on top of a given color.\n\n```scss\n@debug mdc-theme-light-or-dark(#9c27b0); // light\n```\n\n#### `mdc-theme-light-variant` and `mdc-theme-dark-variant`\n\nFunction | Description\n--- | ---\n`mdc-theme-dark-variant($color, $num-indexes)` | Darken a color by a certain number of indexes within its tonal palette\n`mdc-theme-light-variant($color, $num-indexes)` | Lighten a color by a certain number of indexes within its tonal palette\n\nBoth functions are luminance-aware, and will always return a color that is visually distinct from both the input color\n_and_ the other function.\n\nThat is, if the color passed to `mdc-theme-dark-variant()` is already so dark that darkening it by the requested amount\nwould return `#000000`, the function will _lighten_ the color instead.\n\nSimilarly, if the color passed to `mdc-theme-light-variant()` is already so light that lightening it by the requested\namount would return `#ffffff`, the function will _darken_ the color instead.\n\nTo avoid having both functions return the same color in cases of extremely high or low input luminance,\n`mdc-theme-dark-variant()` will return a color that is _twice_ (×2) as dark as requested when the input is already very\nlight. Likewise, `mdc-theme-light-variant()` will return a color that is _twice_ (×2) as light as requested when the\ninput is already very dark. This ensures that the _light_ variant will always be lighter than the _dark_ variant.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/material-components/material-components-web.git"
  },
  "scripts": {},
  "version": "0.4.0"
}
